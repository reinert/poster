version: "3.5"
services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8123:80"
    depends_on:
      - server
  pgsql:
    image: postgres:alpine
    tmpfs:
      - /var/lib/postgresql:rw,noexec,nosuid,size=128m
    volumes:
#      - ./pgsql/.data/postgresql:/var/lib/postgresql/data
      - ./pgsql/migrations:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PWD
      POSTGRES_DB: $DB_DB
  server:
    build:
      context: server
#      args:
#        USER: $SV_USER
#        USER_ID: $SV_USER_ID
#        GROUP_ID: $SV_GROUP_ID
    depends_on:
      - pgsql
    volumes:
      - ./server/src:/home/node/src
      - ./server/node_modules:/home/node/node_modules
      - ./server/.logs:/home/node/.logs
      - ./server/yarn.lock:/home/node/yarn.lock
      - ./server/package.json:/home/node/package.json
      - ./server/wait-for-postgres.sh:/home/node/wait-for-postgres.sh
    environment:
      PGUSER: $DB_USER
      PGPASSWORD: $DB_PWD
      PGDATABASE: $DB_DB
      PGHOST: pgsql
#      LOG: .logs/server.log
    expose:
      - "3000"
    command: ["./wait-for-postgres.sh", "pgsql", "--", "yarn", "--immutable", "install"]
#    command: /bin/sh
#    stdin_open: true
#    tty: true
